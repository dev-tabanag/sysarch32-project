<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pcbBack.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
  <metadata name="cmbIsActive.Locked" type="System.Boolean, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
</root>